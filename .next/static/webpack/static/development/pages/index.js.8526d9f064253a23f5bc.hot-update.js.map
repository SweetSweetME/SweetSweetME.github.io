{"version":3,"file":"static/webpack/static/development/pages/index.js.8526d9f064253a23f5bc.hot-update.js","sources":["webpack:///./pages/index.js"],"sourcesContent":["import Layout from '../Components/Layout';\nimport Link from 'next/link';\nimport Test from '../Components/Test';\nimport fetch from 'isomorphic-unfetch';\nimport useSWR from 'swr';\nimport { useRouter } from 'next/router';\n\nfunction fetcher(url) {\n  return fetch(url).then(r => r.json());\n}\n\nconst Cc = () => (\n  <div className=\"test-wrapper\">\n    <Test />\n  </div>\n)\n\nconst Index = props => {\n  const { query } = useRouter();\n  const { data, error } = useSWR(\n    `/api/randomQuote${query.author ? '?author=' + query.author : ''}`,\n    fetcher\n  );\n  // The following line has optional chaining, added in Next.js v9.1.5,\n  // is the same as `data && data.author`\n  const author = data?.author;\n  let quote = data?.quote;\n\n\n  if (!data) quote = 'Loading...';\n  if (error) quote = 'Failed to fetch the quote.';\n\n  return (\n    <div className=\"aaa\">\n      <Layout>\n      <div className=\"quote\">{quote}</div>\n      {author && <span className=\"author\">- {author}</span>}\n        <h1>Batman TV Shows</h1>\n        <ul>\n          {props.shows.map(show => (\n              <li key={show.id}>\n                <Link\n                  href=\"/p/[id]\"\n                  as={`/p/${show.id}`}\n                >\n                  <a>{show.name}</a>\n                </Link>\n              </li>\n            ))}\n        </ul>\n        <div>\n          sss\n          <span className=\"a\">123</span>\n        </div>\n        <div>123</div>\n        <div className=\"stt\">\n          <Cc />\n        </div>\n      </Layout>\n      <style jsx>\n        {`\n          div {\n            color: pink;\n          }\n        `}\n      </style>\n      <style jsx>\n        {`\n          h1 {\n            color: orange;\n          }\n          .stt {\n            color: red;\n          }\n        `}\n        </style>\n    </div>\n  )\n}\n\nIndex.getInitialProps = async function() {\n  const res = await fetch('https://api.tvmaze.com/search/shows?q=batman');\n  const data = await res.json();\n\n  console.log(data)\n\n  return {\n    shows: data.map(entry => entry.show)\n  }\n}\n\nexport default Index"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AACA;AACA;AACA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAFA;AACA;AAKA;AAAA;AAAA;AACA;AADA;AAAA;AAAA;AAOA;AACA;AACA;AADA;AACA;AAGA;AACA;AAEA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AACA;AAFA;AAAA;AAAA;AAAA;AAAA;AAAA;AAIA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AANA;AAWA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAvBA;AAAA;AAAA;AAAA;AAAA;AAAA;AA6CA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AADA;AACA;AADA;AAAA;AACA;AADA;AAEA;AAEA;AAJA;AAOA;AAAA;AAAA;AADA;AACA;AAPA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAUA;;;;A","sourceRoot":""}