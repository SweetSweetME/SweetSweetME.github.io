{"ast":null,"code":"var _jsxFileName = \"/Users/shentiantian/Desktop/\\u6BD5\\u8BBE/SweetSweetME.github.io/pages/index.js\";\nimport _JSXStyle from \"styled-jsx/style\";\nimport React from \"react\";\nvar __jsx = React.createElement;\nimport Layout from '../Components/Layout';\nimport Link from 'next/link';\nimport Test from '../Components/Test';\nimport fetch from 'isomorphic-unfetch';\n\nconst Cc = () => __jsx(\"div\", {\n  className: \"test-wrapper\",\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 7\n  },\n  __self: this\n}, __jsx(Test, {\n  optionClassName: \"test\",\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 8\n  },\n  __self: this\n}));\n\nconst Index = props => __jsx(\"div\", {\n  className: \"jsx-1899833773\" + \" \" + \"aaa\",\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 13\n  },\n  __self: this\n}, __jsx(Layout, {\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 14\n  },\n  __self: this\n}, __jsx(\"h1\", {\n  className: \"jsx-1899833773\",\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 15\n  },\n  __self: this\n}, \"Batman TV Shows\"), __jsx(\"ul\", {\n  className: \"jsx-1899833773\",\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 16\n  },\n  __self: this\n}, props.shows.map(show => __jsx(\"li\", {\n  key: show.id,\n  className: \"jsx-1899833773\",\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 18\n  },\n  __self: this\n}, __jsx(Link, {\n  href: \"/p/[id]\",\n  as: `/p/${show.id}`,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 19\n  },\n  __self: this\n}, __jsx(\"a\", {\n  className: \"jsx-1899833773\",\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 23\n  },\n  __self: this\n}, show.name))))), __jsx(\"div\", {\n  className: \"jsx-1899833773\",\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 28\n  },\n  __self: this\n}, \"sss\", __jsx(\"span\", {\n  className: \"jsx-1899833773\" + \" \" + \"a\",\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 30\n  },\n  __self: this\n}, \"123\")), __jsx(\"div\", {\n  className: \"jsx-1899833773\",\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 32\n  },\n  __self: this\n}, \"123\"), __jsx(\"div\", {\n  className: \"jsx-1899833773\" + \" \" + \"stt\",\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 33\n  },\n  __self: this\n}, __jsx(Cc, {\n  optionClassName: \"t\",\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 34\n  },\n  __self: this\n}))), __jsx(_JSXStyle, {\n  id: \"1899833773\",\n  __self: this\n}, \"h1.jsx-1899833773{color:orange;}.stt.jsx-1899833773 .t{-webkit-text-decoration:underline;text-decoration:underline;}\\n/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi9Vc2Vycy9zaGVudGlhbnRpYW4vRGVza3RvcC/mr5Xorr4vU3dlZXRTd2VldE1FLmdpdGh1Yi5pby9wYWdlcy9pbmRleC5qcyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFxQ08sQUFHd0IsQUFHYSxhQUY1QiwrQ0FHQSIsImZpbGUiOiIvVXNlcnMvc2hlbnRpYW50aWFuL0Rlc2t0b3Av5q+V6K6+L1N3ZWV0U3dlZXRNRS5naXRodWIuaW8vcGFnZXMvaW5kZXguanMiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgTGF5b3V0IGZyb20gJy4uL0NvbXBvbmVudHMvTGF5b3V0JztcbmltcG9ydCBMaW5rIGZyb20gJ25leHQvbGluayc7XG5pbXBvcnQgVGVzdCBmcm9tICcuLi9Db21wb25lbnRzL1Rlc3QnO1xuaW1wb3J0IGZldGNoIGZyb20gJ2lzb21vcnBoaWMtdW5mZXRjaCc7XG5cbmNvbnN0IENjID0gKCkgPT4gKFxuICA8ZGl2IGNsYXNzTmFtZT1cInRlc3Qtd3JhcHBlclwiPlxuICAgIDxUZXN0IG9wdGlvbkNsYXNzTmFtZT1cInRlc3RcIiAvPlxuICA8L2Rpdj5cbilcblxuY29uc3QgSW5kZXggPSBwcm9wcyA9PiAoXG4gIDxkaXYgY2xhc3NOYW1lPVwiYWFhXCI+XG4gICAgPExheW91dD5cbiAgICAgIDxoMT5CYXRtYW4gVFYgU2hvd3M8L2gxPlxuICAgICAgPHVsPlxuICAgICAgICB7cHJvcHMuc2hvd3MubWFwKHNob3cgPT4gKFxuICAgICAgICAgICAgPGxpIGtleT17c2hvdy5pZH0+XG4gICAgICAgICAgICAgIDxMaW5rXG4gICAgICAgICAgICAgICAgaHJlZj1cIi9wL1tpZF1cIlxuICAgICAgICAgICAgICAgIGFzPXtgL3AvJHtzaG93LmlkfWB9XG4gICAgICAgICAgICAgID5cbiAgICAgICAgICAgICAgICA8YT57c2hvdy5uYW1lfTwvYT5cbiAgICAgICAgICAgICAgPC9MaW5rPlxuICAgICAgICAgICAgPC9saT5cbiAgICAgICAgICApKX1cbiAgICAgIDwvdWw+XG4gICAgICA8ZGl2PlxuICAgICAgICBzc3NcbiAgICAgICAgPHNwYW4gY2xhc3NOYW1lPVwiYVwiPjEyMzwvc3Bhbj5cbiAgICAgIDwvZGl2PlxuICAgICAgPGRpdj4xMjM8L2Rpdj5cbiAgICAgIDxkaXYgY2xhc3NOYW1lPVwic3R0XCI+XG4gICAgICAgIDxDYyBvcHRpb25DbGFzc05hbWU9XCJ0XCIgLz5cbiAgICAgIDwvZGl2PlxuICAgIDwvTGF5b3V0PlxuICAgIDxzdHlsZSBqc3g+XG4gICAgICB7YFxuICAgICAgICBoMSB7XG4gICAgICAgICAgY29sb3I6IG9yYW5nZTtcbiAgICAgICAgfVxuICAgICAgICAuc3R0IDpnbG9iYWwoLnQpIHtcbiAgICAgICAgICB0ZXh0LWRlY29yYXRpb246IHVuZGVybGluZTtcbiAgICAgICAgfVxuICAgICAgYH1cbiAgICAgIDwvc3R5bGU+XG4gIDwvZGl2PlxuKVxuXG5JbmRleC5nZXRJbml0aWFsUHJvcHMgPSBhc3luYyBmdW5jdGlvbigpIHtcbiAgY29uc3QgcmVzID0gYXdhaXQgZmV0Y2goJ2h0dHBzOi8vYXBpLnR2bWF6ZS5jb20vc2VhcmNoL3Nob3dzP3E9YmF0bWFuJyk7XG4gIGNvbnN0IGRhdGEgPSBhd2FpdCByZXMuanNvbigpO1xuXG4gIGNvbnNvbGUubG9nKGRhdGEpXG5cbiAgcmV0dXJuIHtcbiAgICBzaG93czogZGF0YS5tYXAoZW50cnkgPT4gZW50cnkuc2hvdylcbiAgfVxufVxuXG5leHBvcnQgZGVmYXVsdCBJbmRleCJdfQ== */\\n/*@ sourceURL=/Users/shentiantian/Desktop/\\u6BD5\\u8BBE/SweetSweetME.github.io/pages/index.js */\"));\n\nIndex.getInitialProps = async function () {\n  const res = await fetch('https://api.tvmaze.com/search/shows?q=batman');\n  const data = await res.json();\n  console.log(data);\n  return {\n    shows: data.map(entry => entry.show)\n  };\n};\n\nexport default Index;","map":{"version":3,"sources":["/Users/shentiantian/Desktop/毕设/SweetSweetME.github.io/pages/index.js"],"names":["Layout","Link","Test","fetch","Cc","Index","props","shows","map","show","id","name","getInitialProps","res","data","json","console","log","entry"],"mappings":";;;;AAAA,OAAOA,MAAP,MAAmB,sBAAnB;AACA,OAAOC,IAAP,MAAiB,WAAjB;AACA,OAAOC,IAAP,MAAiB,oBAAjB;AACA,OAAOC,KAAP,MAAkB,oBAAlB;;AAEA,MAAMC,EAAE,GAAG,MACT;AAAK,EAAA,SAAS,EAAC,cAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GACE,MAAC,IAAD;AAAM,EAAA,eAAe,EAAC,MAAtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EADF,CADF;;AAMA,MAAMC,KAAK,GAAGC,KAAK,IACjB;AAAA,sCAAe,KAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GACE,MAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qBADF,EAEE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GACGA,KAAK,CAACC,KAAN,CAAYC,GAAZ,CAAgBC,IAAI,IACjB;AAAI,EAAA,GAAG,EAAEA,IAAI,CAACC,EAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GACE,MAAC,IAAD;AACE,EAAA,IAAI,EAAC,SADP;AAEE,EAAA,EAAE,EAAG,MAAKD,IAAI,CAACC,EAAG,EAFpB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAIE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAAID,IAAI,CAACE,IAAT,CAJF,CADF,CADH,CADH,CAFF,EAcE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UAEE;AAAA,sCAAgB,GAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAFF,CAdF,EAkBE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAlBF,EAmBE;AAAA,sCAAe,KAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GACE,MAAC,EAAD;AAAI,EAAA,eAAe,EAAC,GAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EADF,CAnBF,CADF;AAAA;AAAA;AAAA,i2EADF;;AAsCAN,KAAK,CAACO,eAAN,GAAwB,kBAAiB;AACvC,QAAMC,GAAG,GAAG,MAAMV,KAAK,CAAC,8CAAD,CAAvB;AACA,QAAMW,IAAI,GAAG,MAAMD,GAAG,CAACE,IAAJ,EAAnB;AAEAC,EAAAA,OAAO,CAACC,GAAR,CAAYH,IAAZ;AAEA,SAAO;AACLP,IAAAA,KAAK,EAAEO,IAAI,CAACN,GAAL,CAASU,KAAK,IAAIA,KAAK,CAACT,IAAxB;AADF,GAAP;AAGD,CATD;;AAWA,eAAeJ,KAAf","sourcesContent":["import Layout from '../Components/Layout';\nimport Link from 'next/link';\nimport Test from '../Components/Test';\nimport fetch from 'isomorphic-unfetch';\n\nconst Cc = () => (\n  <div className=\"test-wrapper\">\n    <Test optionClassName=\"test\" />\n  </div>\n)\n\nconst Index = props => (\n  <div className=\"aaa\">\n    <Layout>\n      <h1>Batman TV Shows</h1>\n      <ul>\n        {props.shows.map(show => (\n            <li key={show.id}>\n              <Link\n                href=\"/p/[id]\"\n                as={`/p/${show.id}`}\n              >\n                <a>{show.name}</a>\n              </Link>\n            </li>\n          ))}\n      </ul>\n      <div>\n        sss\n        <span className=\"a\">123</span>\n      </div>\n      <div>123</div>\n      <div className=\"stt\">\n        <Cc optionClassName=\"t\" />\n      </div>\n    </Layout>\n    <style jsx>\n      {`\n        h1 {\n          color: orange;\n        }\n        .stt :global(.t) {\n          text-decoration: underline;\n        }\n      `}\n      </style>\n  </div>\n)\n\nIndex.getInitialProps = async function() {\n  const res = await fetch('https://api.tvmaze.com/search/shows?q=batman');\n  const data = await res.json();\n\n  console.log(data)\n\n  return {\n    shows: data.map(entry => entry.show)\n  }\n}\n\nexport default Index"]},"metadata":{},"sourceType":"module"}