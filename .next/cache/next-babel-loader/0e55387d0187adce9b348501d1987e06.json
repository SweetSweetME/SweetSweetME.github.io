{"ast":null,"code":"var _jsxFileName = \"/Users/shentiantian/Desktop/\\u6BD5\\u8BBE/SweetSweetME.github.io/pages/index.js\";\nimport _JSXStyle from \"styled-jsx/style\";\nimport React from \"react\";\nvar __jsx = React.createElement;\nimport Layout from '../Components/Layout';\nimport Link from 'next/link';\nimport fetch from 'isomorphic-unfetch';\n\nconst Index = props => __jsx(Layout, {\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 6\n  },\n  __self: this\n}, __jsx(\"h1\", {\n  className: \"jsx-4003216360\",\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 7\n  },\n  __self: this\n}, \"Batman TV Shows\"), __jsx(\"ul\", {\n  className: \"jsx-4003216360\",\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 8\n  },\n  __self: this\n}, props.shows.map(show => __jsx(\"li\", {\n  key: show.id,\n  className: \"jsx-4003216360\",\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 10\n  },\n  __self: this\n}, __jsx(Link, {\n  href: \"/p/[id]\",\n  as: `/p/${show.id}`,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 11\n  },\n  __self: this\n}, __jsx(\"a\", {\n  className: \"jsx-4003216360\",\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 15\n  },\n  __self: this\n}, show.name))))), __jsx(\"div\", {\n  className: \"jsx-4003216360\",\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 20\n  },\n  __self: this\n}, \"sss\", __jsx(\"span\", {\n  className: \"jsx-4003216360\" + \" \" + \"a\",\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 22\n  },\n  __self: this\n}, \"123\")), __jsx(\"div\", {\n  className: \"jsx-4003216360\",\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 24\n  },\n  __self: this\n}, \"123\"), __jsx(_JSXStyle, {\n  id: \"4003216360\",\n  __self: this\n}, \"h1.jsx-4003216360{color:orange;}div.jsx-4003216360{color:pink;}\\n/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi9Vc2Vycy9zaGVudGlhbnRpYW4vRGVza3RvcC/mr5Xorr4vU3dlZXRTd2VldE1FLmdpdGh1Yi5pby9wYWdlcy9pbmRleC5qcyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUF5Qk8sQUFHd0IsQUFHRixXQUNiLEVBSEEiLCJmaWxlIjoiL1VzZXJzL3NoZW50aWFudGlhbi9EZXNrdG9wL+avleiuvi9Td2VldFN3ZWV0TUUuZ2l0aHViLmlvL3BhZ2VzL2luZGV4LmpzIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IExheW91dCBmcm9tICcuLi9Db21wb25lbnRzL0xheW91dCc7XG5pbXBvcnQgTGluayBmcm9tICduZXh0L2xpbmsnO1xuaW1wb3J0IGZldGNoIGZyb20gJ2lzb21vcnBoaWMtdW5mZXRjaCc7XG5cbmNvbnN0IEluZGV4ID0gcHJvcHMgPT4gKFxuICA8TGF5b3V0PlxuICAgIDxoMT5CYXRtYW4gVFYgU2hvd3M8L2gxPlxuICAgIDx1bD5cbiAgICAgIHtwcm9wcy5zaG93cy5tYXAoc2hvdyA9PiAoXG4gICAgICAgICAgPGxpIGtleT17c2hvdy5pZH0+XG4gICAgICAgICAgICA8TGlua1xuICAgICAgICAgICAgICBocmVmPVwiL3AvW2lkXVwiXG4gICAgICAgICAgICAgIGFzPXtgL3AvJHtzaG93LmlkfWB9XG4gICAgICAgICAgICA+XG4gICAgICAgICAgICAgIDxhPntzaG93Lm5hbWV9PC9hPlxuICAgICAgICAgICAgPC9MaW5rPlxuICAgICAgICAgIDwvbGk+XG4gICAgICAgICkpfVxuICAgIDwvdWw+XG4gICAgPGRpdj5cbiAgICAgIHNzc1xuICAgICAgPHNwYW4gY2xhc3NOYW1lPVwiYVwiPjEyMzwvc3Bhbj5cbiAgICA8L2Rpdj5cbiAgICA8ZGl2PjEyMzwvZGl2PlxuICAgIDxzdHlsZSBqc3g+XG4gICAgICB7YFxuICAgICAgICBoMSB7XG4gICAgICAgICAgY29sb3I6IG9yYW5nZTtcbiAgICAgICAgfVxuICAgICAgICBkaXYge1xuICAgICAgICAgIGNvbG9yOiBwaW5rO1xuICAgICAgICB9XG4gICAgICBgfVxuICAgIDwvc3R5bGU+XG4gIDwvTGF5b3V0PlxuKVxuXG5JbmRleC5nZXRJbml0aWFsUHJvcHMgPSBhc3luYyBmdW5jdGlvbigpIHtcbiAgY29uc3QgcmVzID0gYXdhaXQgZmV0Y2goJ2h0dHBzOi8vYXBpLnR2bWF6ZS5jb20vc2VhcmNoL3Nob3dzP3E9YmF0bWFuJyk7XG4gIGNvbnN0IGRhdGEgPSBhd2FpdCByZXMuanNvbigpO1xuXG4gIGNvbnNvbGUubG9nKGRhdGEpXG5cbiAgcmV0dXJuIHtcbiAgICBzaG93czogZGF0YS5tYXAoZW50cnkgPT4gZW50cnkuc2hvdylcbiAgfVxufVxuXG5leHBvcnQgZGVmYXVsdCBJbmRleCJdfQ== */\\n/*@ sourceURL=/Users/shentiantian/Desktop/\\u6BD5\\u8BBE/SweetSweetME.github.io/pages/index.js */\"));\n\nIndex.getInitialProps = async function () {\n  const res = await fetch('https://api.tvmaze.com/search/shows?q=batman');\n  const data = await res.json();\n  console.log(data);\n  return {\n    shows: data.map(entry => entry.show)\n  };\n};\n\nexport default Index;","map":{"version":3,"sources":["/Users/shentiantian/Desktop/毕设/SweetSweetME.github.io/pages/index.js"],"names":["Layout","Link","fetch","Index","props","shows","map","show","id","name","getInitialProps","res","data","json","console","log","entry"],"mappings":";;;;AAAA,OAAOA,MAAP,MAAmB,sBAAnB;AACA,OAAOC,IAAP,MAAiB,WAAjB;AACA,OAAOC,KAAP,MAAkB,oBAAlB;;AAEA,MAAMC,KAAK,GAAGC,KAAK,IACjB,MAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qBADF,EAEE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GACGA,KAAK,CAACC,KAAN,CAAYC,GAAZ,CAAgBC,IAAI,IACjB;AAAI,EAAA,GAAG,EAAEA,IAAI,CAACC,EAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GACE,MAAC,IAAD;AACE,EAAA,IAAI,EAAC,SADP;AAEE,EAAA,EAAE,EAAG,MAAKD,IAAI,CAACC,EAAG,EAFpB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAIE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAAID,IAAI,CAACE,IAAT,CAJF,CADF,CADH,CADH,CAFF,EAcE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UAEE;AAAA,sCAAgB,GAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAFF,CAdF,EAkBE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAlBF;AAAA;AAAA;AAAA,o2DADF;;AAiCAN,KAAK,CAACO,eAAN,GAAwB,kBAAiB;AACvC,QAAMC,GAAG,GAAG,MAAMT,KAAK,CAAC,8CAAD,CAAvB;AACA,QAAMU,IAAI,GAAG,MAAMD,GAAG,CAACE,IAAJ,EAAnB;AAEAC,EAAAA,OAAO,CAACC,GAAR,CAAYH,IAAZ;AAEA,SAAO;AACLP,IAAAA,KAAK,EAAEO,IAAI,CAACN,GAAL,CAASU,KAAK,IAAIA,KAAK,CAACT,IAAxB;AADF,GAAP;AAGD,CATD;;AAWA,eAAeJ,KAAf","sourcesContent":["import Layout from '../Components/Layout';\nimport Link from 'next/link';\nimport fetch from 'isomorphic-unfetch';\n\nconst Index = props => (\n  <Layout>\n    <h1>Batman TV Shows</h1>\n    <ul>\n      {props.shows.map(show => (\n          <li key={show.id}>\n            <Link\n              href=\"/p/[id]\"\n              as={`/p/${show.id}`}\n            >\n              <a>{show.name}</a>\n            </Link>\n          </li>\n        ))}\n    </ul>\n    <div>\n      sss\n      <span className=\"a\">123</span>\n    </div>\n    <div>123</div>\n    <style jsx>\n      {`\n        h1 {\n          color: orange;\n        }\n        div {\n          color: pink;\n        }\n      `}\n    </style>\n  </Layout>\n)\n\nIndex.getInitialProps = async function() {\n  const res = await fetch('https://api.tvmaze.com/search/shows?q=batman');\n  const data = await res.json();\n\n  console.log(data)\n\n  return {\n    shows: data.map(entry => entry.show)\n  }\n}\n\nexport default Index"]},"metadata":{},"sourceType":"module"}