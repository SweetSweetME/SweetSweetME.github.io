{"ast":null,"code":"var _jsxFileName = \"/Users/shentiantian/Desktop/\\u6BD5\\u8BBE/SweetSweetME.github.io/pages/index.js\";\nimport _JSXStyle from \"styled-jsx/style\";\nimport React from \"react\";\nvar __jsx = React.createElement;\nimport Layout from '../Components/Layout';\nimport Link from 'next/link';\nimport Test from '../Components/Test'; // import fetch from 'isomorphic-unfetch';\n// import useSWR from 'swr';\n// import { useRouter } from 'next';\n\nfunction fetcher(url) {\n  return fetch(url).then(r => r.json());\n}\n\nconst Cc = () => __jsx(\"div\", {\n  className: \"test-wrapper\",\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 13\n  },\n  __self: this\n}, __jsx(Test, {\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 14\n  },\n  __self: this\n}));\n\nconst Index = props => {\n  // const { query } = useRouter();\n  // const { data, error } = useSWR(\n  //   `/api/randomQuote${query.author ? '?author=' + query.author : ''}`,\n  //   fetcher\n  // );\n  // // The following line has optional chaining, added in Next.js v9.1.5,\n  // // is the same as `data && data.author`\n  // const author = data?.author;\n  // let quote = data?.quote;\n  // if (!data) quote = 'Loading...';\n  // if (error) quote = 'Failed to fetch the quote.';\n  return __jsx(\"div\", {\n    className: \"jsx-2115608448\" + \" \" + \"aaa\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 34\n    },\n    __self: this\n  }, __jsx(Layout, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 35\n    },\n    __self: this\n  }, __jsx(\"h1\", {\n    className: \"jsx-2115608448\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 38\n    },\n    __self: this\n  }, \"Batman TV Shows\"), __jsx(\"ul\", {\n    className: \"jsx-2115608448\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 39\n    },\n    __self: this\n  }, props.shows.map(show => __jsx(\"li\", {\n    key: show.id,\n    className: \"jsx-2115608448\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41\n    },\n    __self: this\n  }, __jsx(Link, {\n    href: \"/p/[id]\",\n    as: `/p/${show.id}`,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42\n    },\n    __self: this\n  }, __jsx(\"a\", {\n    className: \"jsx-2115608448\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 46\n    },\n    __self: this\n  }, show.name))))), __jsx(\"div\", {\n    className: \"jsx-2115608448\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51\n    },\n    __self: this\n  }, \"sss\", __jsx(\"span\", {\n    className: \"jsx-2115608448\" + \" \" + \"a\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 53\n    },\n    __self: this\n  }, \"123\")), __jsx(\"div\", {\n    className: \"jsx-2115608448\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 55\n    },\n    __self: this\n  }, \"123\"), __jsx(\"div\", {\n    className: \"jsx-2115608448\" + \" \" + \"stt\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 56\n    },\n    __self: this\n  }, __jsx(Cc, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 57\n    },\n    __self: this\n  }))), __jsx(_JSXStyle, {\n    id: \"3040390145\",\n    __self: this\n  }, \"div.jsx-2115608448{color:pink;}\\n/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi9Vc2Vycy9zaGVudGlhbnRpYW4vRGVza3RvcC/mr5Xorr4vU3dlZXRTd2VldE1FLmdpdGh1Yi5pby9wYWdlcy9pbmRleC5qcyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUE0RFMsQUFHd0IsV0FDYiIsImZpbGUiOiIvVXNlcnMvc2hlbnRpYW50aWFuL0Rlc2t0b3Av5q+V6K6+L1N3ZWV0U3dlZXRNRS5naXRodWIuaW8vcGFnZXMvaW5kZXguanMiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgTGF5b3V0IGZyb20gJy4uL0NvbXBvbmVudHMvTGF5b3V0JztcbmltcG9ydCBMaW5rIGZyb20gJ25leHQvbGluayc7XG5pbXBvcnQgVGVzdCBmcm9tICcuLi9Db21wb25lbnRzL1Rlc3QnO1xuLy8gaW1wb3J0IGZldGNoIGZyb20gJ2lzb21vcnBoaWMtdW5mZXRjaCc7XG4vLyBpbXBvcnQgdXNlU1dSIGZyb20gJ3N3cic7XG4vLyBpbXBvcnQgeyB1c2VSb3V0ZXIgfSBmcm9tICduZXh0JztcblxuZnVuY3Rpb24gZmV0Y2hlcih1cmwpIHtcbiAgcmV0dXJuIGZldGNoKHVybCkudGhlbihyID0+IHIuanNvbigpKTtcbn1cblxuY29uc3QgQ2MgPSAoKSA9PiAoXG4gIDxkaXYgY2xhc3NOYW1lPVwidGVzdC13cmFwcGVyXCI+XG4gICAgPFRlc3QgLz5cbiAgPC9kaXY+XG4pXG5cbmNvbnN0IEluZGV4ID0gcHJvcHMgPT4ge1xuICAvLyBjb25zdCB7IHF1ZXJ5IH0gPSB1c2VSb3V0ZXIoKTtcbiAgLy8gY29uc3QgeyBkYXRhLCBlcnJvciB9ID0gdXNlU1dSKFxuICAvLyAgIGAvYXBpL3JhbmRvbVF1b3RlJHtxdWVyeS5hdXRob3IgPyAnP2F1dGhvcj0nICsgcXVlcnkuYXV0aG9yIDogJyd9YCxcbiAgLy8gICBmZXRjaGVyXG4gIC8vICk7XG4gIC8vIC8vIFRoZSBmb2xsb3dpbmcgbGluZSBoYXMgb3B0aW9uYWwgY2hhaW5pbmcsIGFkZGVkIGluIE5leHQuanMgdjkuMS41LFxuICAvLyAvLyBpcyB0aGUgc2FtZSBhcyBgZGF0YSAmJiBkYXRhLmF1dGhvcmBcbiAgLy8gY29uc3QgYXV0aG9yID0gZGF0YT8uYXV0aG9yO1xuICAvLyBsZXQgcXVvdGUgPSBkYXRhPy5xdW90ZTtcblxuXG4gIC8vIGlmICghZGF0YSkgcXVvdGUgPSAnTG9hZGluZy4uLic7XG4gIC8vIGlmIChlcnJvcikgcXVvdGUgPSAnRmFpbGVkIHRvIGZldGNoIHRoZSBxdW90ZS4nO1xuXG4gIHJldHVybiAoXG4gICAgPGRpdiBjbGFzc05hbWU9XCJhYWFcIj5cbiAgICAgIDxMYXlvdXQ+XG4gICAgICB7LyogPGRpdiBjbGFzc05hbWU9XCJxdW90ZVwiPntxdW90ZX08L2Rpdj5cbiAgICAgIHthdXRob3IgJiYgPHNwYW4gY2xhc3NOYW1lPVwiYXV0aG9yXCI+LSB7YXV0aG9yfTwvc3Bhbj59ICovfVxuICAgICAgICA8aDE+QmF0bWFuIFRWIFNob3dzPC9oMT5cbiAgICAgICAgPHVsPlxuICAgICAgICAgIHtwcm9wcy5zaG93cy5tYXAoc2hvdyA9PiAoXG4gICAgICAgICAgICAgIDxsaSBrZXk9e3Nob3cuaWR9PlxuICAgICAgICAgICAgICAgIDxMaW5rXG4gICAgICAgICAgICAgICAgICBocmVmPVwiL3AvW2lkXVwiXG4gICAgICAgICAgICAgICAgICBhcz17YC9wLyR7c2hvdy5pZH1gfVxuICAgICAgICAgICAgICAgID5cbiAgICAgICAgICAgICAgICAgIDxhPntzaG93Lm5hbWV9PC9hPlxuICAgICAgICAgICAgICAgIDwvTGluaz5cbiAgICAgICAgICAgICAgPC9saT5cbiAgICAgICAgICAgICkpfVxuICAgICAgICA8L3VsPlxuICAgICAgICA8ZGl2PlxuICAgICAgICAgIHNzc1xuICAgICAgICAgIDxzcGFuIGNsYXNzTmFtZT1cImFcIj4xMjM8L3NwYW4+XG4gICAgICAgIDwvZGl2PlxuICAgICAgICA8ZGl2PjEyMzwvZGl2PlxuICAgICAgICA8ZGl2IGNsYXNzTmFtZT1cInN0dFwiPlxuICAgICAgICAgIDxDYyAvPlxuICAgICAgICA8L2Rpdj5cbiAgICAgIDwvTGF5b3V0PlxuICAgICAgPHN0eWxlIGpzeD5cbiAgICAgICAge2BcbiAgICAgICAgICBkaXYge1xuICAgICAgICAgICAgY29sb3I6IHBpbms7XG4gICAgICAgICAgfVxuICAgICAgICBgfVxuICAgICAgPC9zdHlsZT5cbiAgICAgIDxzdHlsZSBqc3g+XG4gICAgICAgIHtgXG4gICAgICAgICAgaDEge1xuICAgICAgICAgICAgY29sb3I6IG9yYW5nZTtcbiAgICAgICAgICB9XG4gICAgICAgICAgLnN0dCB7XG4gICAgICAgICAgICBjb2xvcjogcmVkO1xuICAgICAgICAgIH1cbiAgICAgICAgYH1cbiAgICAgICAgPC9zdHlsZT5cbiAgICA8L2Rpdj5cbiAgKVxufVxuXG5JbmRleC5nZXRJbml0aWFsUHJvcHMgPSBhc3luYyBmdW5jdGlvbigpIHtcbiAgY29uc3QgcmVzID0gYXdhaXQgZmV0Y2goJ2h0dHBzOi8vYXBpLnR2bWF6ZS5jb20vc2VhcmNoL3Nob3dzP3E9YmF0bWFuJyk7XG4gIGNvbnN0IGRhdGEgPSBhd2FpdCByZXMuanNvbigpO1xuXG4gIGNvbnNvbGUubG9nKGRhdGEpXG5cbiAgcmV0dXJuIHtcbiAgICBzaG93czogZGF0YS5tYXAoZW50cnkgPT4gZW50cnkuc2hvdylcbiAgfVxufVxuXG5leHBvcnQgZGVmYXVsdCBJbmRleCJdfQ== */\\n/*@ sourceURL=/Users/shentiantian/Desktop/\\u6BD5\\u8BBE/SweetSweetME.github.io/pages/index.js */\"), __jsx(_JSXStyle, {\n    id: \"2934696104\",\n    __self: this\n  }, \"h1.jsx-2115608448{color:orange;}.stt.jsx-2115608448{color:red;}\\n/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi9Vc2Vycy9zaGVudGlhbnRpYW4vRGVza3RvcC/mr5Xorr4vU3dlZXRTd2VldE1FLmdpdGh1Yi5pby9wYWdlcy9pbmRleC5qcyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFtRVMsQUFHMEIsQUFHSCxVQUNaLEdBSEEiLCJmaWxlIjoiL1VzZXJzL3NoZW50aWFudGlhbi9EZXNrdG9wL+avleiuvi9Td2VldFN3ZWV0TUUuZ2l0aHViLmlvL3BhZ2VzL2luZGV4LmpzIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IExheW91dCBmcm9tICcuLi9Db21wb25lbnRzL0xheW91dCc7XG5pbXBvcnQgTGluayBmcm9tICduZXh0L2xpbmsnO1xuaW1wb3J0IFRlc3QgZnJvbSAnLi4vQ29tcG9uZW50cy9UZXN0Jztcbi8vIGltcG9ydCBmZXRjaCBmcm9tICdpc29tb3JwaGljLXVuZmV0Y2gnO1xuLy8gaW1wb3J0IHVzZVNXUiBmcm9tICdzd3InO1xuLy8gaW1wb3J0IHsgdXNlUm91dGVyIH0gZnJvbSAnbmV4dCc7XG5cbmZ1bmN0aW9uIGZldGNoZXIodXJsKSB7XG4gIHJldHVybiBmZXRjaCh1cmwpLnRoZW4ociA9PiByLmpzb24oKSk7XG59XG5cbmNvbnN0IENjID0gKCkgPT4gKFxuICA8ZGl2IGNsYXNzTmFtZT1cInRlc3Qtd3JhcHBlclwiPlxuICAgIDxUZXN0IC8+XG4gIDwvZGl2PlxuKVxuXG5jb25zdCBJbmRleCA9IHByb3BzID0+IHtcbiAgLy8gY29uc3QgeyBxdWVyeSB9ID0gdXNlUm91dGVyKCk7XG4gIC8vIGNvbnN0IHsgZGF0YSwgZXJyb3IgfSA9IHVzZVNXUihcbiAgLy8gICBgL2FwaS9yYW5kb21RdW90ZSR7cXVlcnkuYXV0aG9yID8gJz9hdXRob3I9JyArIHF1ZXJ5LmF1dGhvciA6ICcnfWAsXG4gIC8vICAgZmV0Y2hlclxuICAvLyApO1xuICAvLyAvLyBUaGUgZm9sbG93aW5nIGxpbmUgaGFzIG9wdGlvbmFsIGNoYWluaW5nLCBhZGRlZCBpbiBOZXh0LmpzIHY5LjEuNSxcbiAgLy8gLy8gaXMgdGhlIHNhbWUgYXMgYGRhdGEgJiYgZGF0YS5hdXRob3JgXG4gIC8vIGNvbnN0IGF1dGhvciA9IGRhdGE/LmF1dGhvcjtcbiAgLy8gbGV0IHF1b3RlID0gZGF0YT8ucXVvdGU7XG5cblxuICAvLyBpZiAoIWRhdGEpIHF1b3RlID0gJ0xvYWRpbmcuLi4nO1xuICAvLyBpZiAoZXJyb3IpIHF1b3RlID0gJ0ZhaWxlZCB0byBmZXRjaCB0aGUgcXVvdGUuJztcblxuICByZXR1cm4gKFxuICAgIDxkaXYgY2xhc3NOYW1lPVwiYWFhXCI+XG4gICAgICA8TGF5b3V0PlxuICAgICAgey8qIDxkaXYgY2xhc3NOYW1lPVwicXVvdGVcIj57cXVvdGV9PC9kaXY+XG4gICAgICB7YXV0aG9yICYmIDxzcGFuIGNsYXNzTmFtZT1cImF1dGhvclwiPi0ge2F1dGhvcn08L3NwYW4+fSAqL31cbiAgICAgICAgPGgxPkJhdG1hbiBUViBTaG93czwvaDE+XG4gICAgICAgIDx1bD5cbiAgICAgICAgICB7cHJvcHMuc2hvd3MubWFwKHNob3cgPT4gKFxuICAgICAgICAgICAgICA8bGkga2V5PXtzaG93LmlkfT5cbiAgICAgICAgICAgICAgICA8TGlua1xuICAgICAgICAgICAgICAgICAgaHJlZj1cIi9wL1tpZF1cIlxuICAgICAgICAgICAgICAgICAgYXM9e2AvcC8ke3Nob3cuaWR9YH1cbiAgICAgICAgICAgICAgICA+XG4gICAgICAgICAgICAgICAgICA8YT57c2hvdy5uYW1lfTwvYT5cbiAgICAgICAgICAgICAgICA8L0xpbms+XG4gICAgICAgICAgICAgIDwvbGk+XG4gICAgICAgICAgICApKX1cbiAgICAgICAgPC91bD5cbiAgICAgICAgPGRpdj5cbiAgICAgICAgICBzc3NcbiAgICAgICAgICA8c3BhbiBjbGFzc05hbWU9XCJhXCI+MTIzPC9zcGFuPlxuICAgICAgICA8L2Rpdj5cbiAgICAgICAgPGRpdj4xMjM8L2Rpdj5cbiAgICAgICAgPGRpdiBjbGFzc05hbWU9XCJzdHRcIj5cbiAgICAgICAgICA8Q2MgLz5cbiAgICAgICAgPC9kaXY+XG4gICAgICA8L0xheW91dD5cbiAgICAgIDxzdHlsZSBqc3g+XG4gICAgICAgIHtgXG4gICAgICAgICAgZGl2IHtcbiAgICAgICAgICAgIGNvbG9yOiBwaW5rO1xuICAgICAgICAgIH1cbiAgICAgICAgYH1cbiAgICAgIDwvc3R5bGU+XG4gICAgICA8c3R5bGUganN4PlxuICAgICAgICB7YFxuICAgICAgICAgIGgxIHtcbiAgICAgICAgICAgIGNvbG9yOiBvcmFuZ2U7XG4gICAgICAgICAgfVxuICAgICAgICAgIC5zdHQge1xuICAgICAgICAgICAgY29sb3I6IHJlZDtcbiAgICAgICAgICB9XG4gICAgICAgIGB9XG4gICAgICAgIDwvc3R5bGU+XG4gICAgPC9kaXY+XG4gIClcbn1cblxuSW5kZXguZ2V0SW5pdGlhbFByb3BzID0gYXN5bmMgZnVuY3Rpb24oKSB7XG4gIGNvbnN0IHJlcyA9IGF3YWl0IGZldGNoKCdodHRwczovL2FwaS50dm1hemUuY29tL3NlYXJjaC9zaG93cz9xPWJhdG1hbicpO1xuICBjb25zdCBkYXRhID0gYXdhaXQgcmVzLmpzb24oKTtcblxuICBjb25zb2xlLmxvZyhkYXRhKVxuXG4gIHJldHVybiB7XG4gICAgc2hvd3M6IGRhdGEubWFwKGVudHJ5ID0+IGVudHJ5LnNob3cpXG4gIH1cbn1cblxuZXhwb3J0IGRlZmF1bHQgSW5kZXgiXX0= */\\n/*@ sourceURL=/Users/shentiantian/Desktop/\\u6BD5\\u8BBE/SweetSweetME.github.io/pages/index.js */\"));\n};\n\nIndex.getInitialProps = async function () {\n  const res = await fetch('https://api.tvmaze.com/search/shows?q=batman');\n  const data = await res.json();\n  console.log(data);\n  return {\n    shows: data.map(entry => entry.show)\n  };\n};\n\nexport default Index;","map":{"version":3,"sources":["/Users/shentiantian/Desktop/毕设/SweetSweetME.github.io/pages/index.js"],"names":["Layout","Link","Test","fetcher","url","fetch","then","r","json","Cc","Index","props","shows","map","show","id","name","getInitialProps","res","data","console","log","entry"],"mappings":";;;;AAAA,OAAOA,MAAP,MAAmB,sBAAnB;AACA,OAAOC,IAAP,MAAiB,WAAjB;AACA,OAAOC,IAAP,MAAiB,oBAAjB,C,CACA;AACA;AACA;;AAEA,SAASC,OAAT,CAAiBC,GAAjB,EAAsB;AACpB,SAAOC,KAAK,CAACD,GAAD,CAAL,CAAWE,IAAX,CAAgBC,CAAC,IAAIA,CAAC,CAACC,IAAF,EAArB,CAAP;AACD;;AAED,MAAMC,EAAE,GAAG,MACT;AAAK,EAAA,SAAS,EAAC,cAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GACE,MAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EADF,CADF;;AAMA,MAAMC,KAAK,GAAGC,KAAK,IAAI;AACrB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAGA;AACA;AAEA,SACE;AAAA,wCAAe,KAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,MAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAGE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,uBAHF,EAIE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGA,KAAK,CAACC,KAAN,CAAYC,GAAZ,CAAgBC,IAAI,IACjB;AAAI,IAAA,GAAG,EAAEA,IAAI,CAACC,EAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,MAAC,IAAD;AACE,IAAA,IAAI,EAAC,SADP;AAEE,IAAA,EAAE,EAAG,MAAKD,IAAI,CAACC,EAAG,EAFpB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAIE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAID,IAAI,CAACE,IAAT,CAJF,CADF,CADH,CADH,CAJF,EAgBE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAEE;AAAA,wCAAgB,GAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WAFF,CAhBF,EAoBE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WApBF,EAqBE;AAAA,wCAAe,KAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,MAAC,EAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,CArBF,CADF;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,05GADF;AA8CD,CA7DD;;AA+DAN,KAAK,CAACO,eAAN,GAAwB,kBAAiB;AACvC,QAAMC,GAAG,GAAG,MAAMb,KAAK,CAAC,8CAAD,CAAvB;AACA,QAAMc,IAAI,GAAG,MAAMD,GAAG,CAACV,IAAJ,EAAnB;AAEAY,EAAAA,OAAO,CAACC,GAAR,CAAYF,IAAZ;AAEA,SAAO;AACLP,IAAAA,KAAK,EAAEO,IAAI,CAACN,GAAL,CAASS,KAAK,IAAIA,KAAK,CAACR,IAAxB;AADF,GAAP;AAGD,CATD;;AAWA,eAAeJ,KAAf","sourcesContent":["import Layout from '../Components/Layout';\nimport Link from 'next/link';\nimport Test from '../Components/Test';\n// import fetch from 'isomorphic-unfetch';\n// import useSWR from 'swr';\n// import { useRouter } from 'next';\n\nfunction fetcher(url) {\n  return fetch(url).then(r => r.json());\n}\n\nconst Cc = () => (\n  <div className=\"test-wrapper\">\n    <Test />\n  </div>\n)\n\nconst Index = props => {\n  // const { query } = useRouter();\n  // const { data, error } = useSWR(\n  //   `/api/randomQuote${query.author ? '?author=' + query.author : ''}`,\n  //   fetcher\n  // );\n  // // The following line has optional chaining, added in Next.js v9.1.5,\n  // // is the same as `data && data.author`\n  // const author = data?.author;\n  // let quote = data?.quote;\n\n\n  // if (!data) quote = 'Loading...';\n  // if (error) quote = 'Failed to fetch the quote.';\n\n  return (\n    <div className=\"aaa\">\n      <Layout>\n      {/* <div className=\"quote\">{quote}</div>\n      {author && <span className=\"author\">- {author}</span>} */}\n        <h1>Batman TV Shows</h1>\n        <ul>\n          {props.shows.map(show => (\n              <li key={show.id}>\n                <Link\n                  href=\"/p/[id]\"\n                  as={`/p/${show.id}`}\n                >\n                  <a>{show.name}</a>\n                </Link>\n              </li>\n            ))}\n        </ul>\n        <div>\n          sss\n          <span className=\"a\">123</span>\n        </div>\n        <div>123</div>\n        <div className=\"stt\">\n          <Cc />\n        </div>\n      </Layout>\n      <style jsx>\n        {`\n          div {\n            color: pink;\n          }\n        `}\n      </style>\n      <style jsx>\n        {`\n          h1 {\n            color: orange;\n          }\n          .stt {\n            color: red;\n          }\n        `}\n        </style>\n    </div>\n  )\n}\n\nIndex.getInitialProps = async function() {\n  const res = await fetch('https://api.tvmaze.com/search/shows?q=batman');\n  const data = await res.json();\n\n  console.log(data)\n\n  return {\n    shows: data.map(entry => entry.show)\n  }\n}\n\nexport default Index"]},"metadata":{},"sourceType":"module"}