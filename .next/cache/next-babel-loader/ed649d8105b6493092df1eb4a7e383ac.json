{"ast":null,"code":"var _jsxFileName = \"/Users/shentiantian/Desktop/\\u6BD5\\u8BBE/SweetSweetME.github.io/pages/index.js\";\nimport _JSXStyle from \"styled-jsx/style\";\nimport React from \"react\";\nvar __jsx = React.createElement;\nimport Layout from '../Components/Layout';\nimport Link from 'next/link';\nimport fetch from 'isomorphic-unfetch';\n\nconst Index = props => __jsx(Layout, {\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 6\n  },\n  __self: this\n}, __jsx(\"h1\", {\n  className: \"jsx-2992299207\",\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 7\n  },\n  __self: this\n}, \"Batman TV Shows\"), __jsx(\"ul\", {\n  className: \"jsx-2992299207\",\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 8\n  },\n  __self: this\n}, props.shows.map(show => __jsx(\"li\", {\n  key: show.id,\n  className: \"jsx-2992299207\",\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 10\n  },\n  __self: this\n}, __jsx(Link, {\n  href: \"/p/[id]\",\n  as: `/p/${show.id}`,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 11\n  },\n  __self: this\n}, __jsx(\"a\", {\n  className: \"jsx-2992299207\",\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 15\n  },\n  __self: this\n}, show.name))))), __jsx(\"div\", {\n  className: \"jsx-2992299207\",\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 20\n  },\n  __self: this\n}, \"sss\", __jsx(\"span\", {\n  className: \"jsx-2992299207\" + \" \" + \"a\",\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 22\n  },\n  __self: this\n}, \"123\"), __jsx(\"style\", {\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 23\n  },\n  __self: this\n}, `\n          div{\n            color: pink;\n          }\n        `)), __jsx(\"div\", {\n  className: \"jsx-2992299207\",\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 31\n  },\n  __self: this\n}, \"123\"), __jsx(_JSXStyle, {\n  id: \"2992299207\",\n  __self: this\n}, \"h1.jsx-2992299207{color:orange;}\\n/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi9Vc2Vycy9zaGVudGlhbnRpYW4vRGVza3RvcC/mr5Xorr4vU3dlZXRTd2VldE1FLmdpdGh1Yi5pby9wYWdlcy9pbmRleC5qcyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFnQ08sQUFHd0IsYUFDZiIsImZpbGUiOiIvVXNlcnMvc2hlbnRpYW50aWFuL0Rlc2t0b3Av5q+V6K6+L1N3ZWV0U3dlZXRNRS5naXRodWIuaW8vcGFnZXMvaW5kZXguanMiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgTGF5b3V0IGZyb20gJy4uL0NvbXBvbmVudHMvTGF5b3V0JztcbmltcG9ydCBMaW5rIGZyb20gJ25leHQvbGluayc7XG5pbXBvcnQgZmV0Y2ggZnJvbSAnaXNvbW9ycGhpYy11bmZldGNoJztcblxuY29uc3QgSW5kZXggPSBwcm9wcyA9PiAoXG4gIDxMYXlvdXQ+XG4gICAgPGgxPkJhdG1hbiBUViBTaG93czwvaDE+XG4gICAgPHVsPlxuICAgICAge3Byb3BzLnNob3dzLm1hcChzaG93ID0+IChcbiAgICAgICAgICA8bGkga2V5PXtzaG93LmlkfT5cbiAgICAgICAgICAgIDxMaW5rXG4gICAgICAgICAgICAgIGhyZWY9XCIvcC9baWRdXCJcbiAgICAgICAgICAgICAgYXM9e2AvcC8ke3Nob3cuaWR9YH1cbiAgICAgICAgICAgID5cbiAgICAgICAgICAgICAgPGE+e3Nob3cubmFtZX08L2E+XG4gICAgICAgICAgICA8L0xpbms+XG4gICAgICAgICAgPC9saT5cbiAgICAgICAgKSl9XG4gICAgPC91bD5cbiAgICA8ZGl2PlxuICAgICAgc3NzXG4gICAgICA8c3BhbiBjbGFzc05hbWU9XCJhXCI+MTIzPC9zcGFuPlxuICAgICAgPHN0eWxlPlxuICAgICAgICB7YFxuICAgICAgICAgIGRpdntcbiAgICAgICAgICAgIGNvbG9yOiBwaW5rO1xuICAgICAgICAgIH1cbiAgICAgICAgYH1cbiAgICAgIDwvc3R5bGU+XG4gICAgPC9kaXY+XG4gICAgPGRpdj4xMjM8L2Rpdj5cbiAgICA8c3R5bGUganN4PlxuICAgICAge2BcbiAgICAgICAgaDEge1xuICAgICAgICAgIGNvbG9yOiBvcmFuZ2U7XG4gICAgICAgIH1cbiAgICAgIGB9XG4gICAgPC9zdHlsZT5cbiAgPC9MYXlvdXQ+XG4pXG5cbkluZGV4LmdldEluaXRpYWxQcm9wcyA9IGFzeW5jIGZ1bmN0aW9uKCkge1xuICBjb25zdCByZXMgPSBhd2FpdCBmZXRjaCgnaHR0cHM6Ly9hcGkudHZtYXplLmNvbS9zZWFyY2gvc2hvd3M/cT1iYXRtYW4nKTtcbiAgY29uc3QgZGF0YSA9IGF3YWl0IHJlcy5qc29uKCk7XG5cbiAgY29uc29sZS5sb2coZGF0YSlcblxuICByZXR1cm4ge1xuICAgIHNob3dzOiBkYXRhLm1hcChlbnRyeSA9PiBlbnRyeS5zaG93KVxuICB9XG59XG5cbmV4cG9ydCBkZWZhdWx0IEluZGV4Il19 */\\n/*@ sourceURL=/Users/shentiantian/Desktop/\\u6BD5\\u8BBE/SweetSweetME.github.io/pages/index.js */\"));\n\nIndex.getInitialProps = async function () {\n  const res = await fetch('https://api.tvmaze.com/search/shows?q=batman');\n  const data = await res.json();\n  console.log(data);\n  return {\n    shows: data.map(entry => entry.show)\n  };\n};\n\nexport default Index;","map":{"version":3,"sources":["/Users/shentiantian/Desktop/毕设/SweetSweetME.github.io/pages/index.js"],"names":["Layout","Link","fetch","Index","props","shows","map","show","id","name","getInitialProps","res","data","json","console","log","entry"],"mappings":";;;;AAAA,OAAOA,MAAP,MAAmB,sBAAnB;AACA,OAAOC,IAAP,MAAiB,WAAjB;AACA,OAAOC,KAAP,MAAkB,oBAAlB;;AAEA,MAAMC,KAAK,GAAGC,KAAK,IACjB,MAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qBADF,EAEE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GACGA,KAAK,CAACC,KAAN,CAAYC,GAAZ,CAAgBC,IAAI,IACjB;AAAI,EAAA,GAAG,EAAEA,IAAI,CAACC,EAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GACE,MAAC,IAAD;AACE,EAAA,IAAI,EAAC,SADP;AAEE,EAAA,EAAE,EAAG,MAAKD,IAAI,CAACC,EAAG,EAFpB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAIE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAAID,IAAI,CAACE,IAAT,CAJF,CADF,CADH,CADH,CAFF,EAcE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UAEE;AAAA,sCAAgB,GAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAFF,EAGE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GACI;;;;SADJ,CAHF,CAdF,EAyBE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAzBF;AAAA;AAAA;AAAA,q4DADF;;AAqCAN,KAAK,CAACO,eAAN,GAAwB,kBAAiB;AACvC,QAAMC,GAAG,GAAG,MAAMT,KAAK,CAAC,8CAAD,CAAvB;AACA,QAAMU,IAAI,GAAG,MAAMD,GAAG,CAACE,IAAJ,EAAnB;AAEAC,EAAAA,OAAO,CAACC,GAAR,CAAYH,IAAZ;AAEA,SAAO;AACLP,IAAAA,KAAK,EAAEO,IAAI,CAACN,GAAL,CAASU,KAAK,IAAIA,KAAK,CAACT,IAAxB;AADF,GAAP;AAGD,CATD;;AAWA,eAAeJ,KAAf","sourcesContent":["import Layout from '../Components/Layout';\nimport Link from 'next/link';\nimport fetch from 'isomorphic-unfetch';\n\nconst Index = props => (\n  <Layout>\n    <h1>Batman TV Shows</h1>\n    <ul>\n      {props.shows.map(show => (\n          <li key={show.id}>\n            <Link\n              href=\"/p/[id]\"\n              as={`/p/${show.id}`}\n            >\n              <a>{show.name}</a>\n            </Link>\n          </li>\n        ))}\n    </ul>\n    <div>\n      sss\n      <span className=\"a\">123</span>\n      <style>\n        {`\n          div{\n            color: pink;\n          }\n        `}\n      </style>\n    </div>\n    <div>123</div>\n    <style jsx>\n      {`\n        h1 {\n          color: orange;\n        }\n      `}\n    </style>\n  </Layout>\n)\n\nIndex.getInitialProps = async function() {\n  const res = await fetch('https://api.tvmaze.com/search/shows?q=batman');\n  const data = await res.json();\n\n  console.log(data)\n\n  return {\n    shows: data.map(entry => entry.show)\n  }\n}\n\nexport default Index"]},"metadata":{},"sourceType":"module"}