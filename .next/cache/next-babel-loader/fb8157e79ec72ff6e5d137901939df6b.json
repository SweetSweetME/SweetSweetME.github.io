{"ast":null,"code":"// import Layout from '../Components/Layout';\n// import Link from 'next/link';\n// import Test from '../Components/Test';\n// import fetch from 'isomorphic-unfetch';\n// import useSWR from 'swr';\n// import { useRouter } from 'next';\n// function fetcher(url) {\n//   return fetch(url).then(r => r.json());\n// }\n// const Cc = () => (\n//   <div className=\"test-wrapper\">\n//     <Test />\n//   </div>\n// )\n// const Index = props => {\n//   const { query } = useRouter();\n//   const { data, error } = useSWR(\n//     `/api/randomQuote${query.author ? '?author=' + query.author : ''}`,\n//     fetcher\n//   );\n//   // The following line has optional chaining, added in Next.js v9.1.5,\n//   // is the same as `data && data.author`\n//   const author = data?.author;\n//   let quote = data?.quote;\n//   if (!data) quote = 'Loading...';\n//   if (error) quote = 'Failed to fetch the quote.';\n//   return (\n//     <div className=\"aaa\">\n//       <Layout>\n//       <div className=\"quote\">{quote}</div>\n//       {author && <span className=\"author\">- {author}</span>}\n//         <h1>Batman TV Shows</h1>\n//         <ul>\n//           {props.shows.map(show => (\n//               <li key={show.id}>\n//                 <Link\n//                   href=\"/p/[id]\"\n//                   as={`/p/${show.id}`}\n//                 >\n//                   <a>{show.name}</a>\n//                 </Link>\n//               </li>\n//             ))}\n//         </ul>\n//         <div>\n//           sss\n//           <span className=\"a\">123</span>\n//         </div>\n//         <div>123</div>\n//         <div className=\"stt\">\n//           <Cc />\n//         </div>\n//       </Layout>\n//       <style jsx>\n//         {`\n//           div {\n//             color: pink;\n//           }\n//         `}\n//       </style>\n//       <style jsx>\n//         {`\n//           h1 {\n//             color: orange;\n//           }\n//           .stt {\n//             color: red;\n//           }\n//         `}\n//         </style>\n//     </div>\n//   )\n// }\n// Index.getInitialProps = async function() {\n//   const res = await fetch('https://api.tvmaze.com/search/shows?q=batman');\n//   const data = await res.json();\n//   console.log(data)\n//   return {\n//     shows: data.map(entry => entry.show)\n//   }\n// }\n// export default Index","map":{"version":3,"sources":["/Users/shentiantian/Desktop/毕设/SweetSweetME.github.io/pages/index.js"],"names":[],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAGA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AAEA;AAEA;AACA;AACA;AACA;AAEA","sourcesContent":["// import Layout from '../Components/Layout';\n// import Link from 'next/link';\n// import Test from '../Components/Test';\n// import fetch from 'isomorphic-unfetch';\n// import useSWR from 'swr';\n// import { useRouter } from 'next';\n\n// function fetcher(url) {\n//   return fetch(url).then(r => r.json());\n// }\n\n// const Cc = () => (\n//   <div className=\"test-wrapper\">\n//     <Test />\n//   </div>\n// )\n\n// const Index = props => {\n//   const { query } = useRouter();\n//   const { data, error } = useSWR(\n//     `/api/randomQuote${query.author ? '?author=' + query.author : ''}`,\n//     fetcher\n//   );\n//   // The following line has optional chaining, added in Next.js v9.1.5,\n//   // is the same as `data && data.author`\n//   const author = data?.author;\n//   let quote = data?.quote;\n\n\n//   if (!data) quote = 'Loading...';\n//   if (error) quote = 'Failed to fetch the quote.';\n\n//   return (\n//     <div className=\"aaa\">\n//       <Layout>\n//       <div className=\"quote\">{quote}</div>\n//       {author && <span className=\"author\">- {author}</span>}\n//         <h1>Batman TV Shows</h1>\n//         <ul>\n//           {props.shows.map(show => (\n//               <li key={show.id}>\n//                 <Link\n//                   href=\"/p/[id]\"\n//                   as={`/p/${show.id}`}\n//                 >\n//                   <a>{show.name}</a>\n//                 </Link>\n//               </li>\n//             ))}\n//         </ul>\n//         <div>\n//           sss\n//           <span className=\"a\">123</span>\n//         </div>\n//         <div>123</div>\n//         <div className=\"stt\">\n//           <Cc />\n//         </div>\n//       </Layout>\n//       <style jsx>\n//         {`\n//           div {\n//             color: pink;\n//           }\n//         `}\n//       </style>\n//       <style jsx>\n//         {`\n//           h1 {\n//             color: orange;\n//           }\n//           .stt {\n//             color: red;\n//           }\n//         `}\n//         </style>\n//     </div>\n//   )\n// }\n\n// Index.getInitialProps = async function() {\n//   const res = await fetch('https://api.tvmaze.com/search/shows?q=batman');\n//   const data = await res.json();\n\n//   console.log(data)\n\n//   return {\n//     shows: data.map(entry => entry.show)\n//   }\n// }\n\n// export default Index"]},"metadata":{},"sourceType":"script"}